{"version":3,"sources":["api/goods.ts","App.tsx","GoodsList.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","Tab","get5First","goods","sort","prevGood","curGood","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","className","map","style","id","App","useState","setGoods","None","currentTab","setCurrentTab","isLoading","setIsLoading","isError","setIsError","handleGoodsLoad","getGoods","tab","catch","finally","type","classnames","All","onClick","First5","Red","ReactDOM","render","document","getElementById"],"mappings":"+NAKO,SAASA,IACd,OAAOC,MAHO,yEAIXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICHFC,EDGQC,EAAY,WACvB,OAAON,IACJE,MAAK,SAAAK,GAAK,OAAIA,EAAMC,MAAK,SAACC,EAAUC,GAAX,OACxBD,EAASE,KAAKC,cAAcF,EAAQC,SAEnCE,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOd,IACJE,MAAK,SAAAK,GAAK,OAAIA,EAAMQ,QAAO,SAACC,GAAD,MAAyB,QAAfA,EAAKC,a,eEblCC,EAA6B,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACxC,oBAAIY,UAAU,MAAd,SACGZ,EAAMa,KAAI,SAAAJ,GAAI,OACb,oBAEEG,UAAU,wDACV,UAAQ,OACRE,MAAO,CAAEJ,MAAM,GAAD,OAAKD,EAAKC,QAJ1B,SAMGD,EAAKL,MALDK,EAAKM,W,SDJbjB,K,YAAAA,E,UAAAA,E,gBAAAA,E,WAAAA,M,KAOE,IAAMkB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAAoCD,mBAASnB,EAAIqB,MAAjD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAkB,SACtBC,EACAC,GAEA,OAAO,WACDA,IAAQR,IACVG,GAAa,GACbE,GAAW,GAEXE,IACGhC,KAAKuB,GACLW,OAAM,kBAAMJ,GAAW,MACvBK,SAAQ,kBAAMP,GAAa,MAE9BF,EAAcO,MAKpB,OACE,sBAAKhB,UAAU,MAAf,UAEE,sBAAKA,UAAU,oDAAf,UACE,oBACEA,UAAU,kCADZ,mCAMA,oBAAGA,UAAU,wCAAb,UACE,wBACEmB,KAAK,SACLnB,UAAWoB,IACT,SACA,WACA,cACA,OACA,CAAE,aAAcV,GAAaF,IAAetB,EAAImC,MAElD,UAAQ,aACRC,QAASR,EAAgBjC,EAAQK,EAAImC,KAVvC,4BAeA,wBACEF,KAAK,SACLnB,UAAWoB,IAAW,mCAAoC,CACxD,aAAcV,GAAaF,IAAetB,EAAIqC,SAEhD,UAAQ,oBACRD,QAASR,EAAgB3B,EAAWD,EAAIqC,QAN1C,gCAWA,wBACEJ,KAAK,SACLnB,UAAWoB,IAAW,8BAA+B,CACnD,aAAcV,GAAaF,IAAetB,EAAIsC,MAEhD,UAAQ,aACRF,QAASR,EAAgBnB,EAAaT,EAAIsC,KAN5C,kCAaJ,mBAAGxB,UAAU,GAAb,SACGY,EACC,oDAEA,cAAC,EAAD,CAAWxB,MAAOA,UE1F5BqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.589d2d8e.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((prevGood, curGood) => (\n      prevGood.name.localeCompare(curGood.name)\n    ))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter((good) => good.color === 'red'));\n};\n","import classnames from 'classnames';\nimport React, { useState } from 'react';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nenum Tab {\n  None = 'none',\n  All = 'all',\n  First5 = 'first5',\n  Red = 'Red',\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [currentTab, setCurrentTab] = useState(Tab.None);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleGoodsLoad = (\n    getGoods: () => Promise<Good[]>,\n    tab: Tab,\n  ) => {\n    return () => {\n      if (tab !== currentTab) {\n        setIsLoading(true);\n        setIsError(false);\n\n        getGoods()\n          .then(setGoods)\n          .catch(() => setIsError(true))\n          .finally(() => setIsLoading(false));\n\n        setCurrentTab(tab);\n      }\n    };\n  };\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"panel is-primary is-flex is-flex-direction-column\">\n        <h1\n          className=\"panel-heading has-text-centered\"\n        >\n          Dynamic list of Goods\n        </h1>\n\n        <p className=\"panel-tabs p-2 has-background-primary\">\n          <button\n            type=\"button\"\n            className={classnames(\n              'button',\n              'is-light',\n              'is-outlined',\n              'mr-5',\n              { 'is-loading': isLoading && currentTab === Tab.All },\n            )}\n            data-cy=\"all-button\"\n            onClick={handleGoodsLoad(getAll, Tab.All)}\n          >\n            Load all goods\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames('button is-light is-outlined mr-5', {\n              'is-loading': isLoading && currentTab === Tab.First5,\n            })}\n            data-cy=\"first-five-button\"\n            onClick={handleGoodsLoad(get5First, Tab.First5)}\n          >\n            Load 5 first goods\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames('button is-light is-outlined', {\n              'is-loading': isLoading && currentTab === Tab.Red,\n            })}\n            data-cy=\"red-button\"\n            onClick={handleGoodsLoad(getRedGoods, Tab.Red)}\n          >\n            Load red goods\n          </button>\n        </p>\n      </div>\n\n      <p className=\"\">\n        {isError ? (\n          <p>!!!Loading Error!!!</p>\n        ) : (\n          <GoodsList goods={goods} />\n        )}\n      </p>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"box\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        className=\"box is-rounded py-2 my-1 has-background-success-light\"\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}