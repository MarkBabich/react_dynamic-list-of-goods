{"version":3,"sources":["api/goods.ts","App.tsx","GoodsList.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","ListType","get5First","goods","sort","prevGood","curGood","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","className","map","style","id","App","useState","setGoods","None","currentListType","setCurrentListType","isLoading","setIsLoading","isError","setIsError","handleGoodsLoad","useCallback","getGoods","listType","catch","finally","type","classnames","onClick","All","disabled","First5","Red","ReactDOM","render","document","getElementById"],"mappings":"sOAKO,SAASA,IACd,OAAOC,MAHO,yEAIXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICHFC,EDGQC,EAAY,WACvB,OAAON,IACJE,MAAK,SAAAK,GAAK,OAAI,YAAIA,GAChBC,MAAK,SAACC,EAAUC,GAAX,OACJD,EAASE,KAAKC,cAAcF,EAAQC,SAErCE,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOd,IACJE,MAAK,SAAAK,GAAK,OAAIA,EAAMQ,QAAO,SAACC,GAAD,MAAyB,QAAfA,EAAKC,a,eEdlCC,EAA6B,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACxC,oBAAIY,UAAU,MAAd,SACGZ,EAAMa,KAAI,SAAAJ,GAAI,OACb,oBAEEG,UAAU,wDACV,UAAQ,OACRE,MAAO,CAAEJ,MAAM,GAAD,OAAKD,EAAKC,QAJ1B,SAMGD,EAAKL,MALDK,EAAKM,W,SDJbjB,K,YAAAA,E,UAAAA,E,gBAAAA,E,WAAAA,M,KAOE,IAAMkB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAA8CD,mBAASnB,EAASqB,MAAhE,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAkBC,uBACtB,SACEC,EACAC,GAEAN,GAAa,GACbE,GAAW,GAEXG,IACGjC,KAAKuB,GACLY,OAAM,kBAAML,GAAW,MACvBM,SAAQ,kBAAMR,GAAa,MAE9BF,EAAmBQ,KAClB,CAACT,IAGN,OACE,sBAAKR,UAAU,MAAf,UAEE,sBAAKA,UAAU,oDAAf,UACE,oBACEA,UAAU,kCADZ,mCAMA,oBAAGA,UAAU,wCAAb,UACE,wBACEoB,KAAK,SACLpB,UAAWqB,IAAW,mCAAoC,CACxD,aAAcX,IAEhB,UAAQ,aACRY,QAAS,kBAAMR,EAAgBjC,EAAQK,EAASqC,MAChDC,SAAUd,GAAaF,IAAoBtB,EAASqC,IAPtD,4BAYA,wBACEH,KAAK,SACLpB,UAAWqB,IAAW,mCAAoC,CACxD,aAAcX,IAEhB,UAAQ,oBACRY,QAAS,kBAAMR,EAAgB3B,EAAWD,EAASuC,SACnDD,SAAUd,GAAaF,IAAoBtB,EAASuC,OAPtD,gCAYA,wBACEL,KAAK,SACLpB,UAAWqB,IAAW,8BAA+B,CACnD,aAAcX,IAEhB,UAAQ,aACRY,QAAS,kBAAMR,EAAgBnB,EAAaT,EAASwC,MACrDF,SAAUd,GAAaF,IAAoBtB,EAASwC,IAPtD,kCAcHhB,EACG,mDAEA,qCACGE,GAAW,qDAEVA,GAAW,cAAC,EAAD,CAAWxB,MAAOA,WEzF3CuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c7a95595.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods]\n      .sort((prevGood, curGood) => (\n        prevGood.name.localeCompare(curGood.name)\n      ))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter((good) => good.color === 'red'));\n};\n","import classnames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nenum ListType {\n  None = 'none',\n  All = 'all',\n  First5 = 'first5',\n  Red = 'Red',\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [currentListType, setCurrentListType] = useState(ListType.None);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleGoodsLoad = useCallback(\n    (\n      getGoods: () => Promise<Good[]>,\n      listType: ListType,\n    ) => {\n      setIsLoading(true);\n      setIsError(false);\n\n      getGoods()\n        .then(setGoods)\n        .catch(() => setIsError(true))\n        .finally(() => setIsLoading(false));\n\n      setCurrentListType(listType);\n    }, [currentListType],\n  );\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"panel is-primary is-flex is-flex-direction-column\">\n        <h1\n          className=\"panel-heading has-text-centered\"\n        >\n          Dynamic list of Goods\n        </h1>\n\n        <p className=\"panel-tabs p-2 has-background-primary\">\n          <button\n            type=\"button\"\n            className={classnames('button is-light is-outlined mr-5', {\n              'is-loading': isLoading,\n            })}\n            data-cy=\"all-button\"\n            onClick={() => handleGoodsLoad(getAll, ListType.All)}\n            disabled={isLoading || currentListType === ListType.All}\n          >\n            Load all goods\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames('button is-light is-outlined mr-5', {\n              'is-loading': isLoading,\n            })}\n            data-cy=\"first-five-button\"\n            onClick={() => handleGoodsLoad(get5First, ListType.First5)}\n            disabled={isLoading || currentListType === ListType.First5}\n          >\n            Load 5 first goods\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames('button is-light is-outlined', {\n              'is-loading': isLoading,\n            })}\n            data-cy=\"red-button\"\n            onClick={() => handleGoodsLoad(getRedGoods, ListType.Red)}\n            disabled={isLoading || currentListType === ListType.Red}\n          >\n            Load red goods\n          </button>\n        </p>\n      </div>\n\n      {isLoading\n        ? <p>List is loading...</p>\n        : (\n          <>\n            {isError && <p>!!!Loading Error!!!</p>}\n\n            {!isError && <GoodsList goods={goods} />}\n          </>\n        )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"box\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        className=\"box is-rounded py-2 my-1 has-background-success-light\"\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}